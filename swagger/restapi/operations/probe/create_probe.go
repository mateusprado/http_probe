// Code generated by go-swagger; DO NOT EDIT.

package probe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// CreateProbeHandlerFunc turns a function with the right signature into a create probe handler
type CreateProbeHandlerFunc func(CreateProbeParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreateProbeHandlerFunc) Handle(params CreateProbeParams) middleware.Responder {
	return fn(params)
}

// CreateProbeHandler interface for that can handle valid create probe params
type CreateProbeHandler interface {
	Handle(CreateProbeParams) middleware.Responder
}

// NewCreateProbe creates a new http.Handler for the create probe operation
func NewCreateProbe(ctx *middleware.Context, handler CreateProbeHandler) *CreateProbe {
	return &CreateProbe{Context: ctx, Handler: handler}
}

/*CreateProbe swagger:route POST /probe probe createProbe

CreateProbe create probe API

*/
type CreateProbe struct {
	Context *middleware.Context
	Handler CreateProbeHandler
}

func (o *CreateProbe) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewCreateProbeParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
